Given N x M character matrix A of O's and X's, where O = white, X = black.

Return the number of black shapes. A black shape consists of one or more adjacent X's (diagonals not included)



Input Format:

    The First and only argument is a N x M character matrix.
Output Format:

    Return a single integer denoting number of black shapes.
Constraints:

    1 <= N,M <= 1000
    A[i][j] = 'X' or 'O'
Example:

Input 1:
    A = [ OOOXOOO
          OOXXOXO
          OXOOOXO  ]
Output 1:
    3
Explanation:
    3 shapes are  :
    (i)    X
         X X
    (ii)
          X
    (iii)
          X
          X
Note: we are looking for connected shapes here.

XXX
XXX
XXX
is just one single connected black shape.












---------------------
public class Solution {
    public int black(String[] A) {
    }
}


// hi 
// I don't think I would be able to solve this problem now. 
// would you please paste here the hints- so that I would solve this problem later in the morning
//ok wait
// can i give you an algorithm mechanism?
// yes - I am not some advanced programmer 
// Answer := 0
/*Loop i = 1 to N :
    Loop j = 1 to M:
          IF MATRIX at i, j equal to 'X' and not visited:
                 BFS/DFS to mark the connected area as visited
                 update Answer
    EndLoop
EndLoop

return Answer*/

// above-- I don't look at solution not even at hints to solve the problem - I solve them on my own  but thanks for the help 
// ok save it and solve it by own way because for this i also need some time.

// ok thanks I am ending this interview Bye 